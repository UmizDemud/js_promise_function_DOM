{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","addEventListener","nodeName","id","printMessage","message","msg","document","createElement","classList","add","innerHTML","getElementById","appendChild","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BJ,EAAQK,iBAAiBJ,EAAW,WAClCE,EAAQ,UAAUF,OAAAA,EACKD,KAAAA,mBAAAA,OAAAA,EAAQM,SACpBN,MAAAA,OAAAA,OAAAA,EAAQO,GAFZ,UAOb,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAMC,SAASC,cAAc,OAEnCF,EAAIG,UAAUC,IAAI,WAClBJ,EAAIK,UAAYN,EAChBE,SAASK,eAAe,YAAYC,YAAYP,IAGlDQ,OAAOC,QAAU,CACfpB,QAAAA,EACAS,aAAAA","file":"main.f1e45e40.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve, reject) => {\n    element.addEventListener(eventName, () => {\n      resolve(`It was ${eventName} `\n        + `on the element: ${element.nodeName}, `\n        + `id: ${element.id}.`);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const msg = document.createElement('div');\n\n  msg.classList.add('message');\n  msg.innerHTML = message;\n  document.getElementById('messages').appendChild(msg);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}